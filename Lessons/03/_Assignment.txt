* Read "Objective 1.2: Manage multithreading" to be able to:
	- describe the main problems we have to solve in terms of multithreading - synchronizing resources, canceling tasks.
	- explain "atomic operation", "non-atomic operation", synchronized access.
	- implement synchronized access by using "lock". What are requirements on a lock instance?
	- explain "deadlock" and implement it.
	- understand when it is better to use System.Threading.Volatile class. 
	- use Interlocked class to ensure atomic operations by using Increment(), Decrement(), Exchange().
	- explain how "cancellation tokens" work. Why CancellationTokenSource, CancellationToken classes.
	- signal cancelation of a task by using OperationCanceledException.
	- handle cancelation by using cancelation with TaskContinuationOptions.OnlyOnCanceled.
	- cancel a task by using Task.WaitAny().

* Walk through examples _01_AccesingSharedData to _07_TaskWaitAny.

* Read "Objective 1.3: Implement program flow" to be able to:
	- explain short-circuiting for boolean expressions.
	- explain ^(xor), & and | operators.
	- use null-coalescing operator (??).
	- use if statement, else, conditional operator (?:).
	- use switch statement, switch-section, switch-label, default label, break, goto case.
	- use for, while, do while, break, continue.
	- use foreach, break, continue. What can be "a collection"?

* Solve TaskA - TaskC.
	 
* Commit all changes into your branch in the respository.
* Update your lesson record on confluence.
